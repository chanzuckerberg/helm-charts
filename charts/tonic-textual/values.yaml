environmentName: <company-name>

# You can set this to a specific Solar version number if you wish to ensure you always get the same version. Otherwise you will always deploy the latest version of Solar.
solarVersion: "<version-number>"

solarEncryptionSecret: <encryption-key>

openAiKey: <your-openai-key>

# solarDatabase is the postgres database that will hold information about your workspace.
solarDatabase:
  host: <db-host>
  port: 5432
  dbName: solar
  user: <user>
  password: <password>
  sslMode: Require

solar_api_server:
  env: {}
  # annotations to apply to the service that routes traffic to the web server
  #annotations: {}
    # By default this chart will create an internal load balancer service on
    # EKS and AKS; however, providing additional annotations will disable this
    # If additional annotations are applied and you need a load balancer to
    # the Tonic installation see documentation from your cloud provider
    # AWS: https://docs.aws.amazon.com/eks/latest/userguide/network-load-balancing.html
    #      https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.5/
    # Azure: https://learn.microsoft.com/en-us/azure/aks/internal-lb
    # GCP: https://cloud.google.com/kubernetes-engine/docs/concepts/service-load-balancer
  ports:
    httpsOnly: true
    https: 443
    http: 80
solar_worker:
  # numberOfWorkers will determine how many worker containers are deployed when installing the helm chart.
  numberOfWorkers: 1
  env: {}
solar_ml:
  env: {}


# This value will be provided to you by Solar and will allow you to authenticate against our private docker repository.
dockerConfigAuth: <docker-config-auth>

# Service account for solar
serviceAccount:
  create: true
  annotations: {}
  name: solar

# Google SSO Config
# -----------------
#googleClientId: <client-id>
#googleClientSecret: <client-secret>

# Okta SSO Config
# -----------------
#oktaAuthServerId: <customer auth server if you have one>
#oktaClientId: <client-id>
#oktaDomain: <sso-domain>
#oktaIdentityProviderId: <identity-provider-id>

# Github SSO Config
# -----------------
#githubClientId: <client-id>
#githubClientSecret: <client-secret>

# Deployment Strategy: This can be set to either "RollingUpdate" or "Recreate". If not provided, the default value
# is "Recreate". "RollingUpdate" will perform a rolling update of the deployment similar to a blue/green
# deployment and thus requires additional resources as both old and new versions will be running simultaneously
# for several minutes. Solar will be available during this time, but behavior may be unpredictable depending on
# differences in the running an new versions. "Recreate" means that the current deployment will be deleted and a
# new one created. This will result in Solar being down during an update.
deployStrategy: Recreate